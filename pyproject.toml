[project]
name = "sdss-clu"
version = "2.3.1"
description = "A new protocol for SDSS actors."
authors = [ { name = "José Sánchez-Gallego", email = "gallegoj@uw.edu" } ]
license = { text = "BSD-3-Clause" }
readme = "README.rst"

requires-python = ">=3.8,<4.0"

dependencies = [
    "click>=8.0",
    "aio_pika>=9.0.0",
    "jsonschema>=4.0.1",
    "sdsstools>=1.0.0",
    "prompt_toolkit>=3.0.6",
    "aiormq>=6.6.4",
    "unclick>=0.1.0b5",
    "click-default-group>=1.2.2",
    "click-aliases>=1.0.4",
]

[project.optional-dependencies]
websockets = ["websockets>=11.0.3"]

[project.urls]
Homepage = "https://github.com/sdss/clu"
Repository = "https://github.com/sdss/clu"
Documentation = "https://clu.readthedocs.io/en/latest/"

[project.scripts]
clu = "clu.__main__:main"

[dependency-groups]
dev = [
    "ipython>=8.0.0",
    "flake8>=3.7.9",
    "doc8>=0.8.0",
    "toml>=0.10.0",
    "isort>=5.2.2",
    "ipdb>=0.13.3",
    "rstcheck>=3.3.1",
    "black>=20.8b1",
    "pytest-mock>=3.2.0",
    "codecov>=2.0.15",
    "coverage[toml]>=5.0",
    "pytest>=5.2.2",
    "pytest-asyncio>=0.10.0",
    "pytest-cov>=2.8.1",
    "pytest-sugar>=0.9.2",
    "mirakuru>=2.0.0",
    "Sphinx>=5.0.0",
    "myst-parser>=0.14.0",
    "sphinx-copybutton>=0.3.3",
    "nox>=2021.6.12",
    "sphinx-autobuild>=2021.3.14",
    "furo>=2021.6.18",
    "ruff>=0.0.284",
    "sphinx-autodoc-typehints>=1.24.0",
]

[tool.black]
line-length = 88
target-version = ["py312"]
fast = true
extend-exclude = 'docs/sphinx/examples/.+\.py'

[tool.ruff]
line-length = 88
target-version = 'py311'

[tool.ruff.lint]
select = ["E", "F", "I"]
exclude = ["docs/sphinx/examples/*.py", "python/clu/legacy/types/*.py"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403", "E402"]

[tool.ruff.lint.isort]
known-first-party = ["clu"]
lines-after-imports = 2
section-order = ["future", "standard-library", "typing", "third-party", "sdss", "first-party", "local-folder"]

[tool.ruff.lint.isort.sections]
typing = ["typing"]
sdss = ["sdsstools"]

[tool.ruff.format]
exclude =[
    "python/clu/legacy/types/*"
]

[tool.pytest.ini_options]
addopts = "--cov clu --cov-report xml --cov-report html --cov-report term -p no:warnings"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
branch = true
omit = [
    "*/__init__.py",
    "*/__main__.py",
    "*/clu/legacy/types/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "@abc.abstractmethod",
    "class TCPProtocol",
    "class PeriodicTCPServer",
    "class CaseInsensitiveDict",
    "def cli_coro",
    "class ReconnectingTCPClientProtocol",
    "if TYPE_CHECKING"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
only-include = ["python/clu"]

[tool.hatch.build.targets.wheel]
packages = ["python/clu"]
