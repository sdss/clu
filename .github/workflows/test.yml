# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test

on:
  push:
    branches: [main]
    paths-ignore:
      - '*.md'
      - '*.rst'
  pull_request:
    branches: [main]
    paths-ignore:
      - '*.md'
      - '*.rst'

jobs:
  build:
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8]

    steps:
      - uses: actions/checkout@v2

      - name: Cache Setup
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip

      - name: Setup RabbitMQ
        run: |
          sudo apt-get install --assume-yes rabbitmq-server
          # Stop the service. pytest-rabbitmq will spawn a new server.
          sudo service rabbitmq-server stop
          # Give permissions to user
          sudo chown -R $USER:$USER /var/lib/rabbitmq
          sudo chown -R $USER:$USER /var/log/rabbitmq

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup node.js (for pyright)
        uses: actions/setup-node@v2
        with:
          node-version: '15'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .

      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --show-source --statistics

      - name: Lint with isort
        run: |
          pip install isort
          isort -c python/

      - name: Run type checking
        run: |
          npm install -g pyright
          poetry run pyright

      - name: Test with pytest
        run: |
          pip install pytest pytest-cov pytest-asyncio pytest-mock pytest-rabbitmq asynctest
          pip install coverage[toml]
          pytest
        env:
          PYTEST_ADDOPTS: '--rabbitmq-ctl=/usr/lib/rabbitmq/bin/rabbitmqctl --rabbitmq-server=/usr/lib/rabbitmq/bin/rabbitmq-server'

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
