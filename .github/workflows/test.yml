name: Test

on:
  push:
    branches: [main]
    paths-ignore:
      - '*.md'
      - '*.rst'
  pull_request:
    branches: [main]
    paths-ignore:
      - '*.md'
      - '*.rst'

jobs:
  build:
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']

    steps:
      - uses: actions/checkout@v2

      - name: Cache Setup
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip

      - name: Setup RabbitMQ
        continue-on-error: true
        run: |
          sudo apt-get install --assume-yes rabbitmq-server

      - name: Start RabbitMQ
        run: |
          sudo service rabbitmq-server restart

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      # - name: Setup node.js (for pyright)
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: '15'

      - name: Install poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 - --git https://github.com/python-poetry/poetry.git@master

      - name: Install dependencies
        run: |
          poetry install --with test --without dev

      - name: Lint with flake8
        run: |
          poetry run flake8 . --count --show-source --statistics

      - name: Lint with isort
        run: |
          poetry run isort -c python/

      # - name: Run type checking
      #   if: ${{ matrix.python-version != '3.7' }}
      #   run: |
      #     npm install -g pyright
      #     poetry run pyright

      - name: Test with pytest
        run: |
          poetry run pytest
        env:
          PYTEST_ADDOPTS: '--rabbitmq-ctl=/usr/lib/rabbitmq/bin/rabbitmqctl --rabbitmq-server=/usr/lib/rabbitmq/bin/rabbitmq-server'

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
